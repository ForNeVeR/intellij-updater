# SPDX-FileCopyrightText: 2024-2025 Friedrich von Never <friedrich@fornever.me>
#
# SPDX-License-Identifier: MIT

name: Main
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: '0 0 * * 0'

jobs:
  test:
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image: [ macos-14, ubuntu-24.04, windows-2022 ]
    env:
      DOTNET_CLI_TELEMETRY_OPTOUT: 1
      DOTNET_NOLOGO: 1
      NUGET_PACKAGES: ${{ github.workspace }}/.github/nuget-packages
    steps:
      - uses: actions/checkout@v5
      - name: Set up .NET SDK
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: 9.0.x
      - name: NuGet cache
        uses: actions/cache@v4
        with:
          key: ${{ runner.os }}.nuget.${{ hashFiles('**/*.fsproj') }}
          path: ${{ env.NUGET_PACKAGES }}
      - name: Build
        run: dotnet build
      - name: Test
        run: dotnet test
        timeout-minutes: 10

  integration-test:
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image: [ macos-14, ubuntu-24.04, windows-2022 ]

    steps:
      - uses: actions/checkout@v5
      - id: test
        name: Perform integration test
        uses: ./
        with:
          config-file: test-data/test-config.json
      - name: Dump test results
        shell: pwsh
        env:
          HAS_CHANGES: ${{ steps.test.outputs.has-changes }}
          BRANCH_NAME: ${{ steps.test.outputs.branch-name }}
          COMMIT_MESSAGE: ${{ steps.test.outputs.commit-message }}
          PR_TITLE: ${{ steps.test.outputs.pr-title }}
          PR_BODY_PATH: ${{ steps.test.outputs.pr-body-path }}
        run: |
          scripts/New-TestResultFile.ps1 `
            -HasChanges $env:HAS_CHANGES `
            -BranchName $env:BRANCH_NAME `
            -CommitMessage $env:COMMIT_MESSAGE `
            -PrTitle $env:PR_TITLE `
            -PrBodyPath $env:PR_BODY_PATH `
            -OutFile test-data/test-result.txt
      - name: Assert test results
        shell: pwsh
        run: scripts/Assert-TestResult.ps1 `
            -ExpectedFile test-data/test-data.gold `
            -ActualFile test-data/test-result.txt `
            -AdditionalFiles @('test-data/config.toml', 'test-data/config.properties')

  licenses:
    runs-on: ubuntu-24.04
    steps:
    - name: Check out the sources
      uses: actions/checkout@v5
    - name: REUSE license check
      uses: fsfe/reuse-action@v5

  encoding:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
      - name: Verify encoding
        shell: pwsh
        run: scripts/Test-Encoding.ps1
